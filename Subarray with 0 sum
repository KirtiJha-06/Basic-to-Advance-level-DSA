TC: O(n)
SC: O(n)

class Solution {
  public:
    // Function to check whether there is a subarray present with 0-sum or not.
    bool subArrayExists(vector<int>& arr) {
        int sum = 0;
        unordered_map<int, int> mp;

        // Iterate through the array
        for (int i = 0; i < arr.size(); i++) {
            sum += arr[i];  // Update cumulative sum
            
            // If sum is 0, or if the sum has been encountered before, return true
            if (sum == 0 || mp.find(sum) != mp.end()) {
                return true;
            }
            
            // Otherwise, store the current sum in the map
            mp[sum]++;
        }
        
        // Return false if no subarray with 0 sum is found
        return false;
    }
};
