TC: O(N)
SC: O(N)

class Solution {
public:
    vector<int> twoSum(vector<int>& arr, int target) {
        unordered_map<int, int> mp; // Store elements and their indices for quick lookup.
        vector<int> ans; // To store the result indices.

        for (int i = 0; i < arr.size(); i++) {
            int first = arr[i]; // Current element.
            int sec = target - first; // Required complement to reach the target.

            if (mp.find(sec) != mp.end()) { // Check if complement exists in the map.
                ans.push_back(i); // Add current index.
                ans.push_back(mp[sec]); // Add index of the complement.
                break; // Exit loop since solution is found.
            }
            mp[first] = i; // Store current element and its index in the map.
        }
        return ans; // Return the indices of the two numbers.
    }
};
